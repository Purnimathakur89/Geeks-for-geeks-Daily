Palindromic Partitioning 

class Solution {
    static int palindromicPartition(String str) {
        int n = str.length();
        
        boolean[][] isPalindrome = new boolean[n][n];
        
        int[] cuts = new int[n];
        for (int i = 0; i < n; i++) {
            cuts[i] = i;  // In the worst case, we need i cuts.
        }
        
        for (int end = 0; end < n; end++) {
            for (int start = 0; start <= end; start++) {
                if (str.charAt(start) == str.charAt(end) && (end - start <= 1 || isPalindrome[start + 1][end - 1])) {
                    isPalindrome[start][end] = true;
                    
                    if (start == 0) {
                        cuts[end] = 0;
                    } else {
                        cuts[end] = Math.min(cuts[end], cuts[start - 1] + 1);
                    }
                }
            }
        }
        
        return cuts[n - 1];
    }
}
